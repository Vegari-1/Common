version: "${VERSION}"

x-logging: &fluent-bit
  driver: fluentd
  options:
    fluentd-address: ${FLUENT_BIT_ADDRESS}:24224

services:
  api-gateway:
    image: api-gateway
    build:
      context: ./ApiGateway/ApiGateway
    ports:
      - "${API_GATEWAY_PORT}:${API_GATEWAY_PORT}"
    environment:
      ASPNETCORE_URLS: http://+:${API_GATEWAY_PORT}
      ${PGADMIN_CONNECTION_STRING_NAME}: ${PGADMIN_CONNECTION_STRING_VALUE}
    networks:
      - servers
      - monitoring
    logging: *fluent-bit
    depends_on:
      - jaeger
      - db
  
  auth-service:
    image: auth-service
    build:
      context: ./AuthService/AuthService
    ports:
      - "${AUTH_SERVICE_PORT}:${AUTH_SERVICE_PORT}"
    environment:
      ASPNETCORE_URLS: http://+:${AUTH_SERVICE_PORT}
      ${PGADMIN_CONNECTION_STRING_NAME}: ${PGADMIN_CONNECTION_STRING_VALUE}
    networks:
      - servers
      - monitoring
    logging: *fluent-bit
    depends_on:
      - jaeger
      - db

  message-service:
    image: message-service
    build:
     context: ./MessageService/MessageService
    ports:
      - "${MESSAGE_SERVICE_PORT}:${MESSAGE_SERVICE_PORT}"
    environment:
      ASPNETCORE_URLS: http://+:${MESSAGE_SERVICE_PORT}
      ${PGADMIN_CONNECTION_STRING_NAME}: ${PGADMIN_CONNECTION_STRING_VALUE}
    networks:
      - servers
      - monitoring
    logging: *fluent-bit
    depends_on:
      - jaeger
      - db

  profile-service:
    image: profile-service
    build:
      context: ./ProfileService/ProfileService
    ports:
      - "${PROFILE_SERVICE_PORT}:${PROFILE_SERVICE_PORT}"
    environment:
      ASPNETCORE_URLS: http://+:${PROFILE_SERVICE_PORT}
      ${PGADMIN_CONNECTION_STRING_NAME}: ${PGADMIN_CONNECTION_STRING_VALUE}
    networks:
      - servers
      - monitoring
    logging: *fluent-bit
    depends_on:
      - jaeger
      - db

  post-service:
    image: post-service
    build:
      context: ./PostService/PostService
    restart: always
    ports:
      - "${POST_SERVICE_PORT}:${POST_SERVICE_PORT}"
    environment:
      JAEGER_AGENT_HOST: jeager
      ASPNETCORE_URLS: http://+:${POST_SERVICE_PORT}
      ${PGADMIN_CONNECTION_STRING_NAME}: ${PGADMIN_CONNECTION_STRING_VALUE}
    networks:
      - servers
      - monitoring
    logging: *fluent-bit
    depends_on:
      - jaeger
      - db
      #   condition: service_healthy

  notification-service:
    image: notification-service
    build:
      context: ./NotificationService/NotificationService
    ports:
      - "${NOTIFICATION_SERVICE_PORT}:${NOTIFICATION_SERVICE_PORT}"
    environment:
      ASPNETCORE_URLS: http://+:${NOTIFICATION_SERVICE_PORT}
      ${PGADMIN_CONNECTION_STRING_NAME}: ${PGADMIN_CONNECTION_STRING_VALUE}
    networks:
      - servers
      - monitoring
    logging: *fluent-bit
    depends_on:
      - jaeger
      - db

  job-offer-service:
    image: job-offer-service
    build:
      context: ./JobOfferService/JobOfferService
    ports:
      - "${JOB_OFFER_SERVICE_PORT}:${JOB_OFFER_SERVICE_PORT}"
    environment:
      ASPNETCORE_URLS: http://+:${JOB_OFFER_SERVICE_PORT}
      ${PGADMIN_CONNECTION_STRING_NAME}: ${PGADMIN_CONNECTION_STRING_VALUE}
    networks:
      - servers
      - monitoring
    logging: *fluent-bit
    depends_on:
      - jaeger
      - db

  db:
    image: postgres
    container_name: local_pgdb
    networks:
       - servers
       - monitoring
    restart: always
    user: postgres
    ports:
      - "${POSTGRES_DB_PORT}:${POSTGRES_DB_PORT}"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: pg_isready -U user -d admin
      retries: 3
      interval: 5s
      timeout: 5s
    volumes:
      - local_pgdata:/var/lib/postgresql/data
      # copy the sql script to create tables
      - ./sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
      # copy the sql script to fill tables
      - ./sql/fill_tables.sql:/docker-entrypoint-initdb.d/fill_tables.sql
    logging: *fluent-bit
    
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    networks:
      - servers
      - monitoring
    restart: always
    ports:
      - "${PG_ADMIN_PORT}:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_ROOT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_ROOT_PASSWORD}
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    logging: *fluent-bit
    depends_on:
      - db

volumes:
  local_pgdata:
  pgadmin-data:

networks:
  servers:
    name: servers
    driver: bridge
  monitoring:
    external: true